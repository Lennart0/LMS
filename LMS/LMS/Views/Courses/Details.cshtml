@model LMS.Models.Course

@{
    ViewBag.Title = "Details";
}
<br />
<h2>Course Details:&nbsp; <strong>@ViewBag.CourseName</strong></h2>


<div>
    <hr />

    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            <span class="text-description">
                @Html.DisplayFor(model => model.Description)
            </span>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Start)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Start)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.End)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.End)
        </dd>

        <dt>
        </dt>
    </dl>

    <br /><hr /><br />

    <h4>Modules</h4>
    @Html.ActionLink(linkText: "Add Module", actionName: "Create", controllerName: "Modules", routeValues: new { id = Model.Id, returnUrl = "/Courses/Details/" + Model.Id }, htmlAttributes: null)
    <table class="table table-responsive table-striped">
        <tr>
            <th id="tableCol1">
                @Html.DisplayNameFor(model => model.Name)
            </th>

            <th id="tableCol1">
                @Html.DisplayNameFor(model => model.Description)
            </th>

            <th id="tableCol1">
                @Html.DisplayNameFor(model => model.Start)
            </th>
            <th id="tableCol1">
                @Html.DisplayNameFor(model => model.End)
            </th>
            <th id="tableCol1"></th>
        </tr>

        @foreach (var item in Model.Modules)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Start)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.End)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", "Modules", new { id = item.Id, returnUrl = "/Courses/Details/" + Model.Id }, null) |
                    @*@Html.ActionLink("Edit", "Edit", "Modules", new { id = item.Id, returnUrl = Request.UrlReferrer }, null) |*@
                    @Html.ActionLink("Delete", "Delete", "Modules", new { id = item.Id }, null)
                    
         
                </td>
            </tr>
        }

    </table>

    <br /><hr /><br />

    <h4>Students</h4>
    @Html.ActionLink(linkText: "Add student", actionName: "Register", controllerName: "Account", routeValues: new { id = Model.Id }, htmlAttributes: null)

    <table class="table table-responsive table-striped table-width">
        <tr>
            <th id="tableCol2">
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th id="tableCol2">
                @Html.DisplayNameFor(model => model.Students.First().Email)
            </th>
            @*<th id="tableCol2"></th>*@
        </tr>

        @foreach (var item in Model.Students)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                @*<td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>*@
            </tr>
        }

    </table>

    <br /><hr /><br />
  
    <h4>Kurs-dokument</h4>
  
@Html.Partial("~/Views/Shared/ModelFileView.cshtml",
    new LMS.Models.FileModalPartialViewModel {
        Id = Model.Id,
        Type =LMS.Models.DocumentTargetEntity.Course,
        PostBackChange ="location.reload()" })

    <ul>
        @foreach ( var doc in Model.Documents ) {
            if ( string.IsNullOrWhiteSpace( doc.Url ) ) {
                continue;
            }
            <li>
                @{
                    string url = doc.Url;
                    int ix = url != null ? url.LastIndexOf( '/' ) : -1;
                    string name = url;
                    if ( ix >= 0 ) {
                        name = name.Substring( ix + 1 );
                    }
                    else {
                        url = "~/Documents/Course/" + url;
                    }
                }
                <a href="@url" download>@name</a>
            </li>
        }
    </ul>




    <p><a href="~/Documents/Course/userStories.txt" download>Nerladdnings-test</a></p>


<br /><hr /><br />
<div>
    @Html.ActionLink("Back to Course Register", "Index")
</div>
